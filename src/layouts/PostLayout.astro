---
import "@unocss/reset/tailwind.css";

import type { z } from "astro:content";
import type { postSchema } from "../content/config";
import Header from "../components/Header.astro";

export interface Props {
  content: z.TypeOf<typeof postSchema>;
}

const {
  content: { title, createdAt, author },
} = Astro.props;

const pubDate = new Date(createdAt).toLocaleDateString("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});

const authorIcon =
  (await Astro.glob("../../public/authors/**/*.{jpeg,jpg,png}"))
    .map((v) => v.default.replace("/public", ""))
    .filter((v) => v.toLowerCase().includes(author.toLowerCase()))
    .at(0) ?? "/authors/default.png";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body>
    <Header />
    <article>
      <h1 class="mb-0">{title}</h1>

      <div class="flex items-center mb-0">
        <img
          src={authorIcon}
          width="40"
          height="40"
          class="border-none text-transparent rounded-full"
        />
        <div class="flex items-start flex-col mb-0 ml-2 content-center text-sm">
          <strong>
            <a
              href={`/authors/${author.toLowerCase()}`}
              class="no-underline font-bold text-blue-700 dark:text-blue-400"
            >
              {author}
            </a>
          </strong>
          <time
            class="text-neutral-800 dark:text-neutral-300"
            datetime={pubDate}>{pubDate}</time
          >
        </div>
      </div>
      <slot />
    </article>
  </body>
</html>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
</script>
